name: 'cd'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'project.clj'

permissions:
  contents: read
  # Needed for the 'trilom/file-changes-action' action
  pull-requests: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'

      - name: Display (print) node and java versions
        run:
          node -v && java --version

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.5
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          cli: 1.11.1.1149             # Clojure CLI based on tools.deps
          lein: 2.9.8                  # Leiningen
          clj-kondo: 2022.05.31        # Clj-kondo

      - name: Get clj-kondo version. Clj-kondo searches for opportunities of optimizations
        run: clj-kondo --version

         # # Optional step:
         # - name: Cache clojure dependencies
         #   uses: actions/cache@v3
         #   with:
         #     path: |
         #       ~/.m2/repository
         #       ~/.gitlibs
         #       ~/.deps.clj
         #     # List all files containing dependencies:
         #     key: cljdeps-${{ hashFiles('deps.edn') }}
         #     # key: cljdeps-${{ hashFiles('deps.edn', 'bb.edn') }}
         #     # key: cljdeps-${{ hashFiles('project.clj') }}
         #     # key: cljdeps-${{ hashFiles('build.boot') }}
         #     restore-keys: cljdeps-

      - name: Test if vanilla clojure code is working
        run: clojure -e "(+ 1 1)"

      - name: Display Leiningen version
        run: lein -v

      # - name: Run cljfmt formatter
      #   run: lein cljfmt check

      # - name: Run clj-kondo
      #   run: clj-kondo --lint src

      - name: lein install on this version of re-com
        run:
          lein install

      # - name: Run lein tests
      #   run: lein test

      - name: Deploy to Github Package Registry
        env:
          GITHUB_TOKEN: ${{ secrets.RE_COM_SECRET_ACTIONS }}
        run: |
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>github</id><username>$(echo '$GITHUB_REPOSITORY' | awk -F / '{print $1}')</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
          REPO="gh::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY}"
          mvn deploy -DaltReleaseDeploymentRepository="${REPO}" -DaltSnapshotDeploymentRepository="${REPO}"
